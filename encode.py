#!/usr/bin/env python3
"""
encode.py
Lee una instancia ASCII del puzzle de termómetros y genera domain.lp con hechos.
Uso:
    python3 encode.py entrada.txt domain.lp
Salida (ejemplo de hechos):
    dim(4).
    bulb(2,1,right).
    seg(1,1,up).
    colCount(1,3). rowCount(1,1).
"""
import sys

if len(sys.argv) != 3:
    print("Uso: python3 encode.py entrada.txt domain.lp")
    sys.exit(1)

infile = sys.argv[1]
outfile = sys.argv[2]

# Mapas de caracteres
bulb_map = {'U':'up', 'D':'down', 'L':'left', 'R':'right'}
seg_map = {'^':'up', 'v':'down', '<':'left', '>':'right'}

with open(infile, 'r', encoding='utf-8') as f:
    lines = [line.rstrip('\n') for line in f.readlines()]

if len(lines) < 3:
    print("Entrada inválida: muy pocas líneas.")
    sys.exit(1)

# últimas dos líneas son: primera -> columnas; segunda -> filas (rows)
col_line = lines[-2].strip()
row_line = lines[-1].strip()
grid_lines = lines[:-2]
n = len(grid_lines)

# comprobar consistencia
for i, row in enumerate(grid_lines, start=1):
    if len(row) != n:
        print(f"Fila {i} tiene longitud {len(row)} distinta de n={n}.")
        sys.exit(1)

# parse counts
try:
    col_counts = [int(x) for x in col_line.split()]
    row_counts = [int(x) for x in row_line.split()]
except ValueError:
    print("Los contadores de filas/columnas deben ser enteros separados por espacios.")
    sys.exit(1)

if len(col_counts) != n or len(row_counts) != n:
    print("Número de contadores distinto de n.")
    sys.exit(1)

with open(outfile, 'w', encoding='utf-8') as out:
    out.write(f"% Generated by encode.py from {infile}\n")
    out.write(f"dim({n}).\n\n")

    # escribir la malla: X columnas 1..n, Y filas 1..n (Y=1 es primera línea del fichero)
    for y, row in enumerate(grid_lines, start=1):
        for x, ch in enumerate(row, start=1):
            if ch in bulb_map:
                out.write(f"bulb({x},{y},{bulb_map[ch]}).\n")
            elif ch in seg_map:
                out.write(f"seg({x},{y},{seg_map[ch]}).\n")
            else:
                print(f"Caracter desconocido '{ch}' en ({x},{y}).")
                sys.exit(1)
    out.write("\n")

    # contadores de columnas: colCount(Col,Num).
    for i, num in enumerate(col_counts, start=1):
        out.write(f"colCount({i},{num}).\n")
    out.write("\n")
    # contadores de filas: rowCount(Row,Num).
    for i, num in enumerate(row_counts, start=1):
        out.write(f"rowCount({i},{num}).\n")

print(f"Wrote domain facts to {outfile}")
